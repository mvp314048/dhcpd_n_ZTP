# dhcpd.conf
#
# Sample configuration file for ISC dhcpd
#
# Attention: If /etc/ltsp/dhcpd.conf exists, that will be used as
# configuration file instead of this file.
#

# option definitions common to all supported networks...
option domain-name "example.org";
option domain-name-servers ns1.example.org, ns2.example.org;

default-lease-time 600;
max-lease-time 7200;

# The ddns-updates-style parameter controls whether or not the server will
# attempt to do a DNS update when a lease is confirmed. We default to the
# behavior of the version 2 packages ('none', since DHCP v2 didn't
# have support for DDNS.)
ddns-update-style none;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
#authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
#log-facility local7;

# No service will be given on this subnet, but declaring it helps the
# DHCP server to understand the network topology.

#subnet 10.152.187.0 netmask 255.255.255.0 {
#}

# This is a very basic subnet declaration.

#subnet 10.254.239.0 netmask 255.255.255.224 {
#  range 10.254.239.10 10.254.239.20;
#  option routers rtr-239-0-1.example.org, rtr-239-0-2.example.org;
#}

# This declaration allows BOOTP clients to get dynamic addresses,
# which we don't really recommend.

#subnet 10.254.239.32 netmask 255.255.255.224 {
#  range dynamic-bootp 10.254.239.40 10.254.239.60;
#  option broadcast-address 10.254.239.31;
#  option routers rtr-239-32-1.example.org;
#}

# A slightly different configuration for an internal subnet.

option cumulus-provision-url code 239 = text;

subnet 172.27.43.0 netmask 255.255.255.0 {
  range 172.27.43.130 172.27.43.142;
  option domain-name-servers 8.8.8.8;
  option subnet-mask 255.255.255.0;
  option routers 172.27.43.1;
  option cumulus-provision-url "http://127.27.43.108/cumulusLinux5_11_defaultSet.sh";
  default-lease-time 604800;
  max-lease-time 604800;
}

# Hosts which require special configuration options can be listed in
# host statements.   If no address is specified, the address will be
# allocated dynamically (if possible), but the host-specific information
# will still come from the host declaration.

host Spine1 {
  hardware ethernet 50:00:00:01:00:00;
  fixed-address 172.27.43.130;
}
host Spine2 {
  hardware ethernet 50:00:00:02:00:00;
  fixed-address 172.27.43.131;
}
host Spine3 {
  hardware ethernet 50:02:00:1a:00:00;
  fixed-address 172.27.43.132;
}
host Spine4 {
  hardware ethernet 50:02:00:1b:00:00;
  fixed-address 172.27.43.133;
}
host Leaf1-1 {
  hardware ethernet 50:00:00:03:00:00;
  fixed-address 172.27.43.135;
}
host Leaf1-2 {
  hardware ethernet 50:00:00:04:00:00;
  fixed-address 172.27.43.136;
}
host Leaf2-1 {
  hardware ethernet 50:00:00:05:00:00;
  fixed-address 172.27.43.137;
}
host Leaf2-2 {
  hardware ethernet 50:00:00:07:00:00;
  fixed-address 172.27.43.138;
}
host Leaf3-1 {
  hardware ethernet 50:02:00:0a:00:00;
  fixed-address 172.27.43.139;
}
host Leaf3-2 {
  hardware ethernet 50:02:00:0b:00:00;
  fixed-address 172.27.43.140;
}
host Leaf4-1 {
  hardware ethernet 50:02:00:0c:00:00;
  fixed-address 172.27.43.141;
}
host Leaf4-2 {
  hardware ethernet 50:02:00:0d:00:00;
  fixed-address 172.27.43.142;
}

#host passacaglia {
#  hardware ethernet 0:0:c0:5d:bd:95;
#  filename "vmunix.passacaglia";
#  server-name "toccata.example.com";
#}

# Fixed IP addresses can also be specified for hosts.   These addresses
# should not also be listed as being available for dynamic assignment.
# Hosts for which fixed IP addresses have been specified can boot using
# BOOTP or DHCP.   Hosts for which no fixed address is specified can only
# be booted with DHCP, unless there is an address range on the subnet
# to which a BOOTP client is connected which has the dynamic-bootp flag
# set.
#host fantasia {
#  hardware ethernet 08:00:07:26:c0:a5;
#  fixed-address fantasia.example.com;
#}

# You can declare a class of clients and then do address allocation
# based on that.   The example below shows a case where all clients
# in a certain class get addresses on the 10.17.224/24 subnet, and all
# other clients get addresses on the 10.0.29/24 subnet.

#class "foo" {
#  match if substring (option vendor-class-identifier, 0, 4) = "SUNW";
#}

#shared-network 224-29 {
#  subnet 10.17.224.0 netmask 255.255.255.0 {
#    option routers rtr-224.example.org;
#  }
#  subnet 10.0.29.0 netmask 255.255.255.0 {
#    option routers rtr-29.example.org;
#  }
#  pool {
#    allow members of "foo";
#    range 10.17.224.10 10.17.224.250;
#  }
#  pool {
#    deny members of "foo";
#    range 10.0.29.10 10.0.29.230;
#  }
#}
